version: "3.7"
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: kodersky/golang-api-example
    container_name: golang-api-example
    restart: on-failure
    tty: true
    environment:
      SERVICE_NAME: golang
      SERVICE_TAGS: prod
      TERM: xterm-256color
      TZ: Asia/Bangkok
    expose:
      - 8080
    depends_on:
      - db
    command: ["/go/src/github.com/kodersky/golang-api-example/wait-for-it.sh", "db:3306", "--", "/go/src/github.com/kodersky/golang-api-example/main"]

  webserver:
    image: nginx:alpine
    container_name: golang-api-example-webserver
    restart: unless-stopped
    environment:
      SERVICE_NAME: nginx
      SERVICE_TAGS: prod
    tty: true
    ports:
      - "8080:80"
#      - "8434:443" # not yet
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - app

  db:
    image: mysql:5.7
    container_name: golang-example-api-db
    restart: unless-stopped
    tty: true
    ports:
        - "33306:3306"
    environment:
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: orders
      SERVICE_TAGS: prod
      SERVICE_NAME: mysql
      TZ: Asia/Bangkok
    volumes:
      - orders-db:/var/lib/mysql
volumes:
  orders-db: